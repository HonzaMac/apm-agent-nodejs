

apollo-server-express-2_12:
  name: apollo-server-express
  preinstall: npm uninstall express-graphql
  peerDependencies: graphql@^0.12.0
  # We want this version range:
  #   versions: '>=2.9.16 <2.2 || >= 2.3.2 <3'
  # but only the latest MAJOR.MINOR.x to reduce the test matrix.
  #
  # Maintenance note: This should be updated for newer MAJOR.MINOR releases.
  versions: '2.9.16 || 2.10.1 || 2.11.0 || 2.12.0 || 2.13.1 || 2.14.5 || 2.15.1 || 2.16.1 || 2.17.0 || 2.18.2 || 2.19.2 || 2.20.0 || 2.21.2 || 2.22.2 || 2.23.0 || 2.24.1 || 2.25.0 || >2.25.x <3'
  node: '>=6'
  commands: node test/instrumentation/modules/apollo-server-express.test.js
apollo-server-express-2_13:
  name: apollo-server-express
  preinstall: npm uninstall express-graphql
  peerDependencies: graphql@^0.13.0
  # We want this version range:
  #   versions: '>=2.9.16 <2.2 || >= 2.3.2 <3'
  # but only the latest MAJOR.MINOR.x to reduce the test matrix.
  #
  # Maintenance note: This should be updated for newer MAJOR.MINOR releases.
  versions: '2.9.16 || 2.10.1 || 2.11.0 || 2.12.0 || 2.13.1 || 2.14.5 || 2.15.1 || 2.16.1 || 2.17.0 || 2.18.2 || 2.19.2 || 2.20.0 || 2.21.2 || 2.22.2 || 2.23.0 || 2.24.1 || 2.25.0 || >2.25.x <3'
  node: '>=6'
  commands: node test/instrumentation/modules/apollo-server-express.test.js
apollo-server-express-2_14:
  name: apollo-server-express
  preinstall: npm uninstall express-graphql
  peerDependencies: graphql@^14.0.0
  # We want this version range:
  #   versions: '>=2.9.16 <2.2 || >= 2.3.2 <3'
  # but only the latest MAJOR.MINOR.x to reduce the test matrix.
  #
  # Maintenance note: This should be updated for newer MAJOR.MINOR releases.
  versions: '2.9.16 || 2.10.1 || 2.11.0 || 2.12.0 || 2.13.1 || 2.14.5 || 2.15.1 || 2.16.1 || 2.17.0 || 2.18.2 || 2.19.2 || 2.20.0 || 2.21.2 || 2.22.2 || 2.23.0 || 2.24.1 || 2.25.0 || >2.25.x <3'
  node: '>=6'
  commands: node test/instrumentation/modules/apollo-server-express.test.js
apollo-server-express-2_15:
  name: apollo-server-express
  preinstall: npm uninstall express-graphql
  peerDependencies: graphql@^15.0.0
  # We want this version range (2.12.0 was the first release of
  # apollo-server-express after graphql@15 was released):
  #   versions: '>= 2.12.0 <3'
  # but only the latest MAJOR.MINOR.x to reduce the test matrix.
  #
  # Maintenance note: This should be updated for newer MAJOR.MINOR releases.
  versions: '2.15.1 || 2.16.1 || 2.17.0 || 2.18.2 || 2.19.2 || 2.20.0 || 2.21.2 || 2.22.2 || 2.23.0 || 2.24.1 || 2.25.0 || >2.25.x <3'
  # Per https://github.com/graphql/graphql-js/releases/tag/v15.0.0
  # graphql v15 supports node v8 as a minimum.
  node: '>=8'
  commands: node test/instrumentation/modules/apollo-server-express.test.js

apollo-server-express-3_15:
  name: apollo-server-express
  preinstall: npm uninstall express-graphql
  peerDependencies: graphql@^15.0.0
  versions: '^3.0.0'
  node: '>=12'
  commands: node test/instrumentation/modules/apollo-server-express.test.js

express-queue:
  versions: '>=0.0.11'
  commands: node test/instrumentation/modules/express-queue.test.js

koa-router:
  node: '>=6.0.0'
  peerDependencies: koa@2
  versions: '>=5.2.0 <11'
  commands: node test/instrumentation/modules/koa-router/old-name.test.js
'@koa/router':
  node: '>=8.0.0'
  peerDependencies: koa@2
  versions: '>=8 <11'
  commands: node test/instrumentation/modules/koa-router/new-name.test.js

elasticsearch:
  versions: '>=8.0.0'
  commands: node test/instrumentation/modules/elasticsearch.test.js

# @elastic/elasticsearch
# - Version 7.7.0 included a change that broke usage with Node.js < 10.
#   Fixed in 7.7.1: https://www.elastic.co/guide/en/elasticsearch/client/javascript-api/current/changelog-client.html#_7_7_1
#   Note: When this repo drops Node.js v8 support, `versions` can be simplified.
# - Version 7.12.0 dropped support for node v8.
# - Version 8's min node is v12. We only support the latest canary release (at
#   time of writing). The published '8.0.0-alpha.2' is *not* supported.
'@elastic/elasticsearch-v7.0-v7.12':
  name: '@elastic/elasticsearch'
  versions: '>=7.0.0 <7.7.0 || >7.7.0 <7.12.0'
  commands: node test/instrumentation/modules/@elastic/elasticsearch.test.js
'@elastic/elasticsearch-v7.12-v8':
  name: '@elastic/elasticsearch'
  versions: '>=7.12.0 <8.0.0'
  node: '>=10.0.0'
  commands: node test/instrumentation/modules/@elastic/elasticsearch.test.js
'@elastic/elasticsearch-canary':
  name: '@elastic/elasticsearch-canary'
  versions: '^8.0.0-canary.35'
  node: '>=12'
  commands: node test/instrumentation/modules/@elastic/elasticsearch-canary.test.js

# hapi and @hapi/hapi
# - Package name: Starting with v17.9.0 and v18.2.0 the name changed from
#   'hapi' to '@hapi/hapi'.
# - Node version compat:
#   - hapi@15: supports node >=v4; breaks on node v14 (usage of `os.tmpDir()`)
#   - hapi@16: supports node >=v4
#   - hapi@17, @hapi/hapi@17: supports node >=v8.12.0 (per its README);
#     the instrumentation changed significantly for this version
#   - hapi@18, @hapi/hapi@18: supports node >=v8.12.0 (per its README)
#   - @hapi/hapi@19: supports node >=v12 (judging from commit 50d8d7d)
#   - @hapi/hapi@20: appears (from travis template refs) to support node >=v12
hapi-v9-v15:
  name: hapi
  versions: '>=9.0.1 <16.0.0'
  node: '>=4 <14'
  commands:
    - node test/instrumentation/modules/hapi/basic-legacy-path.test.js
    - node test/instrumentation/modules/hapi/set-framework-hapi.test.js
hapi-v16:
  name: hapi
  versions: '>=16.0.0 <17.0.0'
  node: '>=4'
  commands:
    - node test/instrumentation/modules/hapi/basic-legacy-path.test.js
    - node test/instrumentation/modules/hapi/set-framework-hapi.test.js
hapi-prenodev15:
  name: hapi
  versions: '>=17.0.0'
  node: '>=8.12.0 <15.0.0'
  commands:
    - node test/instrumentation/modules/hapi/basic-legacy-path.test.js
    - node test/instrumentation/modules/hapi/set-framework-hapi.test.js
hapi:
  name: hapi
  # Work around https://github.com/npm/cli/issues/2267 in npm@7.
  # Note: An alternative might be to just not test the "hapi" package with
  # node >= 15, given that "hapi" was deprecated before node v16.
  preinstall: rm -rf node_modules/hapi
  node: '>=15.0.0'
  versions: '>=17.0.0'
  commands:
    - node test/instrumentation/modules/hapi/basic-legacy-path.test.js
    - node test/instrumentation/modules/hapi/set-framework-hapi.test.js
'@hapi/hapi-v17-v18':
  name: '@hapi/hapi'
  versions: '>=17.0.0 <19.0.0'
  node: '>=8.12.0'
  commands:
    - node test/instrumentation/modules/hapi/basic.test.js
    - node test/instrumentation/modules/hapi/set-framework-hapihapi.test.js
'@hapi/hapi':
  name: '@hapi/hapi'
  versions: '>=19.0.0'
  node: '>=12'
  commands:
    - node test/instrumentation/modules/hapi/basic.test.js
    - node test/instrumentation/modules/hapi/set-framework-hapihapi.test.js

tedious:
  name: tedious
  # - tedious@4.0.0 was broken, fixed in 4.0.1 by
  #   https://github.com/tediousjs/tedious/commit/4eceb48
  versions: '^1.9.0 || 2.x || 3.x || ^4.0.1 || 5.x || 6.x || 7.x || 8.x || 9.x'
  commands: node test/instrumentation/modules/tedious.test.js

cassandra-driver:
  # 3.1.0 is broken
  versions: '>=3 <3.1.0 || >3.1.0 <5'
  commands: node test/instrumentation/modules/cassandra-driver/index.test.js

restify-old:
  name: restify
  versions: '>=5.2.0 <8.0.0'
  commands:
    - node test/instrumentation/modules/restify/basic.test.js
    - node test/instrumentation/modules/restify/set-framework.test.js
restify-new:
  name: restify
  node: '>=8.6.0'
  versions: '>=8.0.0'
  commands:
    - node test/instrumentation/modules/restify/basic.test.js
    - node test/instrumentation/modules/restify/set-framework.test.js

# https://www.fastify.io/docs/latest/LTS/
# - #1086 suggests fastify@2.4.0 was a broken release, skip it.
fastify-v1:
  name: fastify
  versions: '1.x'
  node: '>=6 <12'
  commands:
    - node test/instrumentation/modules/fastify/fastify.test.js
    - node test/instrumentation/modules/fastify/async-await.test.js
    - node test/instrumentation/modules/fastify/set-framework.test.js
fastify-v2:
  name: fastify
  versions: '>=2.0.0 <2.4.0 || >2.4.0 <3'
  node: '>=6 <15'
  commands:
    - node test/instrumentation/modules/fastify/fastify.test.js
    - node test/instrumentation/modules/fastify/async-await.test.js
    - node test/instrumentation/modules/fastify/set-framework.test.js
fastify:
  name: fastify
  versions: '>=3.0.0'
  node: '>=10'
  commands:
    - node test/instrumentation/modules/fastify/fastify.test.js
    - node test/instrumentation/modules/fastify/async-await.test.js
    - node test/instrumentation/modules/fastify/set-framework.test.js

finalhandler:
  versions: '*'
  commands: node test/instrumentation/modules/finalhandler.test.js

memcached:
  versions: '>=2.2.0'
  commands: node test/instrumentation/modules/memcached.test.js

body-parser:
  versions: '>=1.19.0'
  commands:
    - node test/sanitize-field-names/express.test.js

aws-sdk:
  # We want this version range:
  #   versions: '>=2.858 <3'
  # However, awk-sdk releases *very* frequently (almost every day) and there
  # is no need to test *all* those releases. Instead we statically list every
  # N=5 releases to test.
  #
  # Maintenance note: This should be updated periodically, keeping 2.858
  # as the earliest version but updating the others.
  versions: '2.858.0 || 2.881.0 || 2.886.0 || 2.891.0 || 2.896.0 || 2.901.0 || 2.906.0 || 2.911.0 || 2.916.0 || 2.921.0 || 2.926.0 || 2.931.0 || 2.936.0 || >2.936 <3'
  commands:
    - node test/instrumentation/modules/aws-sdk/s3.test.js
    - node test/instrumentation/modules/aws-sdk/sqs.test.js
    - node test/instrumentation/modules/aws-sdk/dynamodb.test.js
